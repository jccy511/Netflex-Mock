{"ast":null,"code":"import _classCallCheck from \"D:\\\\Netflex Mock\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Netflex Mock\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Netflex Mock\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Netflex Mock\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Netflex Mock\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Netflex Mock\\\\src\\\\components\\\\MovieList.js\";\nimport React from 'react';\nimport { addMovie as _addMovie, removeMovie as _removeMovie, fetchMovie as _fetchMovie, hideButton } from '../Redux/actions/index';\nimport { connect } from 'react-redux';\nimport MovieItem from './MovieItem';\n\nvar MovieList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MovieList, _React$Component);\n\n  function MovieList() {\n    _classCallCheck(this, MovieList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MovieList).apply(this, arguments));\n  }\n\n  _createClass(MovieList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchMovie();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var myList = this.props.MovieList[\"mylist\"];\n      var recommendList = this.props.MovieList[\"recommendations\"];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"My List\"), React.createElement(\"ul\", {\n        className: \"movie-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, myList.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(MovieItem, {\n          item: item,\n          button: \"Remove\",\n          onClick: function onClick() {\n            return _this.props.removeMovie(item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }));\n      })), React.createElement(\"h2\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Recommendation List\"), React.createElement(\"ul\", {\n        className: \"movie-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, recommendList.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(MovieItem, {\n          item: item,\n          button: \"Add\",\n          onClick: function onClick() {\n            return _this.props.addMovie(item.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return MovieList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    MovieList: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchMovie: function fetchMovie() {\n      dispatch(_fetchMovie());\n    },\n    addMovie: function addMovie(movie) {\n      dispatch(_addMovie(movie));\n      dispatch(hideButton(movie.title));\n    },\n    removeMovie: function removeMovie(movie) {\n      dispatch(_removeMovie(movie));\n      dispatch(hideButton(movie.title));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieList);","map":{"version":3,"sources":["D:\\Netflex Mock\\src\\components\\MovieList.js"],"names":["React","addMovie","removeMovie","fetchMovie","hideButton","connect","MovieItem","MovieList","props","myList","recommendList","map","item","id","Component","mapStateToProps","state","mapDispatchToProps","dispatch","movie","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { addMovie, removeMovie, fetchMovie, hideButton } from '../Redux/actions/index';\nimport { connect } from 'react-redux';\nimport MovieItem from './MovieItem';\n\nclass MovieList extends React.Component {\n   \n    componentDidMount() {\n        this.props.fetchMovie()\n    }\n\n    render() {\n        const myList = this.props.MovieList[\"mylist\"];\n        const recommendList = this.props.MovieList[\"recommendations\"];\n        return (\n            <div >\n                <h2 className=\"title\">My List</h2>\n                <ul className=\"movie-content\" >\n                {\n                    myList.map((item) => {\n                    return  <li key={item.id}>\n                                <MovieItem item = {item}  button=\"Remove\"  onClick={()=>this.props.removeMovie(item.id)}/>\n                                \n                            </li>\n                    })\n                } \n                </ul>\n                <h2 className=\"title\">Recommendation List</h2>\n                <ul className=\"movie-content\" >\n                {\n                    recommendList.map((item) => {\n                    return  <li key={item.id}>\n                                <MovieItem item = {item}  button=\"Add\"  onClick={()=>this.props.addMovie(item.id)}/>\n                                \n                            </li>\n                    })\n                } \n                </ul>\n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        MovieList: state\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchMovie: () => { dispatch(fetchMovie())},\n    addMovie: (movie) => { \n        dispatch(addMovie(movie));\n        dispatch(hideButton(movie.title))\n    },\n    removeMovie: (movie) => { dispatch(removeMovie(movie));\n        dispatch(hideButton(movie.title))\n    }\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieList)"]},"metadata":{},"sourceType":"module"}