{"ast":null,"code":"import _classCallCheck from \"D:\\\\appleAssignment-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\appleAssignment-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\appleAssignment-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\appleAssignment-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\appleAssignment-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\appleAssignment-master\\\\src\\\\components\\\\MovieList.js\";\nimport React from 'react';\nimport { addMovie as _addMovie, removeMovie as _removeMovie, getData as _getData } from '../Redux/actions/index';\nimport { connect } from 'react-redux';\nimport MovieItem from './MovieItem';\n\nvar MovieList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MovieList, _React$Component);\n\n  function MovieList() {\n    _classCallCheck(this, MovieList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MovieList).apply(this, arguments));\n  }\n\n  _createClass(MovieList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var list = this.props.MovieList[this.props.listType];\n      var name = this.props.btnName;\n      var listName = this.props.list;\n      var clickName = name === 'Remove' ? this.props.removeMovie : this.props.addMovie;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, listName), React.createElement(\"ul\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, list.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(SingleMovie, {\n          item: item,\n          button: name,\n          onClick: clickName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return MovieList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    MovieList: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getData: function getData() {\n      dispatch(_getData());\n    },\n    addMovie: function addMovie(movie) {\n      dispatch(_addMovie(movie));\n    },\n    removeMovie: function removeMovie(movie) {\n      dispatch(_removeMovie(movie));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieItem);","map":{"version":3,"sources":["D:\\appleAssignment-master\\src\\components\\MovieList.js"],"names":["React","addMovie","removeMovie","getData","connect","MovieItem","MovieList","props","list","listType","name","btnName","listName","clickName","map","item","id","Component","mapStateToProps","state","mapDispatchToProps","dispatch","movie"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAQ,IAARA,SAAT,EAAmBC,WAAW,IAAXA,YAAnB,EAAgCC,OAAO,IAAPA,QAAhC,QAA+C,wBAA/C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEMC,S;;;;;;;;;;;;;wCAEkB;AAChB,WAAKC,KAAL,CAAWJ,OAAX;AACH;;;6BAEQ;AACL,UAAMK,IAAI,GAAG,KAAKD,KAAL,CAAWD,SAAX,CAAqB,KAAKC,KAAL,CAAWE,QAAhC,CAAb;AACA,UAAMC,IAAI,GAAG,KAAKH,KAAL,CAAWI,OAAxB;AACA,UAAMC,QAAQ,GAAG,KAAKL,KAAL,CAAWC,IAA5B;AACA,UAAMK,SAAS,GAAGH,IAAI,KAAK,QAAT,GAAoB,KAAKH,KAAL,CAAWL,WAA/B,GAA6C,KAAKK,KAAL,CAAWN,QAA1E;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBW,QAAvB,CADJ,EAEI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIJ,IAAI,CAACM,GAAL,CAAS,UAACC,IAAD,EAAU;AACnB,eAAQ;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,WAAD;AAAa,UAAA,IAAI,EAAID,IAArB;AAA4B,UAAA,MAAM,EAAEL,IAApC;AAA2C,UAAA,OAAO,EAAEG,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAAR;AAGC,OAJD,CAFJ,CAFJ,CADJ;AAcH;;;;EAzBmBb,KAAK,CAACiB,S;;AA4B9B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQZ,KAAR,EAAkB;AACtC,SAAO;AACHD,IAAAA,SAAS,EAAEa;AADR,GAAP;AAGH,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACtClB,IAAAA,OAAO,EAAE,mBAAM;AAAEkB,MAAAA,QAAQ,CAAClB,QAAO,EAAR,CAAR;AAAoB,KADC;AAEtCF,IAAAA,QAAQ,EAAE,kBAACqB,KAAD,EAAW;AAAED,MAAAA,QAAQ,CAACpB,SAAQ,CAACqB,KAAD,CAAT,CAAR;AAA2B,KAFZ;AAGtCpB,IAAAA,WAAW,EAAE,qBAACoB,KAAD,EAAW;AAAED,MAAAA,QAAQ,CAACnB,YAAW,CAACoB,KAAD,CAAZ,CAAR;AAA8B;AAHlB,GAAf;AAAA,CAA3B;;AAOA,eAAelB,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,SAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { addMovie, removeMovie, getData } from '../Redux/actions/index';\nimport { connect } from 'react-redux';\nimport MovieItem from './MovieItem';\n\nclass MovieList extends React.Component {\n   \n    componentDidMount() {\n        this.props.getData()\n    }\n\n    render() {\n        const list = this.props.MovieList[this.props.listType];\n        const name = this.props.btnName;\n        const listName = this.props.list;\n        const clickName = name === 'Remove' ? this.props.removeMovie : this.props.addMovie;\n        return (\n            <div >\n                <h2 className=\"title\">{listName}</h2>\n                <ul className=\"card-content\" >\n                {\n                    list.map((item) => {\n                    return  <li key={item.id}>\n                                <SingleMovie item = {item}  button={name}  onClick={clickName}/>\n                            </li>\n                    })\n                } \n                </ul>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        MovieList: state\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    getData: () => { dispatch(getData())},\n    addMovie: (movie) => { dispatch(addMovie(movie)) },\n    removeMovie: (movie) => { dispatch(removeMovie(movie)) }\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieItem)"]},"metadata":{},"sourceType":"module"}