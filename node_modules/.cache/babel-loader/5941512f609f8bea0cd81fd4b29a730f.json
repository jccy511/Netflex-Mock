{"ast":null,"code":"import _toConsumableArray from \"D:\\\\appleAssignment-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\appleAssignment-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { ADD, DELETE, GET, SHOW, HIDE } from '../actions/constants';\nvar defaultState = {\n  show: \"none\",\n  mylist: [],\n  recommendations: []\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET:\n      return action.data;\n\n    case ADD:\n      var recommendItem = state.recommendations.map(function (item) {\n        return item.id;\n      });\n      var recommendIndex = recommendItem.indexOf(action.movie.id);\n      return _objectSpread({}, state, {\n        mylist: [].concat(_toConsumableArray(state.mylist), _toConsumableArray(state.recommendations.splice(recommendIndex, 1)))\n      });\n\n    case DELETE:\n      var listItem = state.mylist.map(function (item) {\n        return item.id;\n      });\n      var listIndex = listItem.indexOf(action.movie.id);\n      return _objectSpread({}, state, {\n        recommendations: [].concat(_toConsumableArray(state.recommendations), _toConsumableArray(state.mylist.splice(listIndex, 1)))\n      });\n\n    case SHOW:\n      action.event.stopPropagation();\n      return _objectSpread({}, state, {\n        show: 'block'\n      });\n\n    case HIDE:\n      action.event.stopPropagation();\n      return _objectSpread({}, state, {\n        show: 'none'\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["D:\\appleAssignment-master\\src\\Redux\\reducers\\index.js"],"names":["ADD","DELETE","GET","SHOW","HIDE","defaultState","show","mylist","recommendations","rootReducer","state","action","type","data","recommendItem","map","item","id","recommendIndex","indexOf","movie","splice","listItem","listIndex","event","stopPropagation"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,IAAjC,QAA6C,sBAA7C;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,MADW;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,eAAe,EAAE;AAHA,CAArB;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKV,GAAL;AACI,aAAOS,MAAM,CAACE,IAAd;;AAEJ,SAAKb,GAAL;AACI,UAAMc,aAAa,GAAGJ,KAAK,CAACF,eAAN,CAAsBO,GAAtB,CAA0B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAT;AAAA,OAA9B,CAAtB;AACA,UAAMC,cAAc,GAAGJ,aAAa,CAACK,OAAd,CAAsBR,MAAM,CAACS,KAAP,CAAaH,EAAnC,CAAvB;AACA,+BACOP,KADP;AAEIH,QAAAA,MAAM,+BAAMG,KAAK,CAACH,MAAZ,sBACHG,KAAK,CAACF,eAAN,CAAsBa,MAAtB,CAA6BH,cAA7B,EAA6C,CAA7C,CADG;AAFV;;AAOJ,SAAKjB,MAAL;AACI,UAAMqB,QAAQ,GAAGZ,KAAK,CAACH,MAAN,CAAaQ,GAAb,CAAiB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAT;AAAA,OAArB,CAAjB;AACA,UAAMM,SAAS,GAAGD,QAAQ,CAACH,OAAT,CAAiBR,MAAM,CAACS,KAAP,CAAaH,EAA9B,CAAlB;AACA,+BACOP,KADP;AAEIF,QAAAA,eAAe,+BAAME,KAAK,CAACF,eAAZ,sBACZE,KAAK,CAACH,MAAN,CAAac,MAAb,CAAoBE,SAApB,EAA+B,CAA/B,CADY;AAFnB;;AAMJ,SAAKpB,IAAL;AACIQ,MAAAA,MAAM,CAACa,KAAP,CAAaC,eAAb;AACA,+BACOf,KADP;AAEIJ,QAAAA,IAAI,EAAE;AAFV;;AAKJ,SAAKF,IAAL;AACIO,MAAAA,MAAM,CAACa,KAAP,CAAaC,eAAb;AACA,+BACOf,KADP;AAEIJ,QAAAA,IAAI,EAAE;AAFV;;AAKA;AACA,aAAOI,KAAP;AAvCR;AAyCH,CA1CD;;AA4CA,eAAeD,WAAf","sourcesContent":["import { ADD, DELETE, GET, SHOW, HIDE } from '../actions/constants';\n\nconst defaultState = {\n    show: \"none\",\n    mylist: [],\n    recommendations: []\n}\n\nconst rootReducer = (state = defaultState, action) => {\n    switch (action.type) {\n\n        case GET:\n            return action.data;\n\n        case ADD:\n            const recommendItem = state.recommendations.map(item => item.id);\n            const recommendIndex = recommendItem.indexOf(action.movie.id);\n            return {\n                ...state,\n                mylist: [...state.mylist,\n                ...state.recommendations.splice(recommendIndex, 1)]\n            }\n\n\n        case DELETE:\n            const listItem = state.mylist.map(item => item.id)\n            const listIndex = listItem.indexOf(action.movie.id);\n            return {\n                ...state,\n                recommendations: [...state.recommendations,\n                ...state.mylist.splice(listIndex, 1)]\n            }\n\n        case SHOW:\n            action.event.stopPropagation()\n            return{\n                ...state,\n                show: 'block'\n            }\n\n        case HIDE:\n            action.event.stopPropagation()\n            return{\n                ...state,\n                show: 'none'\n            }\n        \n            default:\n            return state;\n    }\n}\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}