{"ast":null,"code":"import _defineProperty from \"D:\\\\Netflex Mock\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"D:\\\\Netflex Mock\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\Netflex Mock\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { ADD, DELETE, GET } from \"../actions/constants\";\nvar defaultState = {\n  mylist: [],\n  recommendations: []\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET:\n      return action.data;\n\n    case ADD:\n      var recommendItem = state.recommendations.map(function (item) {\n        return item.id;\n      });\n      var recommendIndex = recommendItem.indexOf(action.movie.id);\n      return _objectSpread({}, state, _defineProperty({\n        mylist: [].concat(_toConsumableArray(state.mylist), _toConsumableArray(state.recommendations.splice(recommendIndex, 1)))\n      }, action.str, false));\n\n    case DELETE:\n      var listItem = state.mylist.map(function (item) {\n        return item.id;\n      });\n      var listIndex = listItem.indexOf(action.movie.id);\n      return _objectSpread({}, state, _defineProperty({\n        recommendations: [].concat(_toConsumableArray(state.recommendations), _toConsumableArray(state.mylist.splice(listIndex, 1)))\n      }, action.str, false));\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["D:\\Netflex Mock\\src\\Redux\\reducers\\index.js"],"names":["ADD","DELETE","GET","defaultState","mylist","recommendations","rootReducer","state","action","type","data","recommendItem","map","item","id","recommendIndex","indexOf","movie","splice","str","listItem","listIndex"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,GAAtB,QAAiC,sBAAjC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,eAAe,EAAE;AAFE,CAArB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,GAAL;AACE,aAAOM,MAAM,CAACE,IAAd;;AAEF,SAAKV,GAAL;AACE,UAAMW,aAAa,GAAGJ,KAAK,CAACF,eAAN,CAAsBO,GAAtB,CAA0B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAT;AAAA,OAA9B,CAAtB;AACA,UAAMC,cAAc,GAAGJ,aAAa,CAACK,OAAd,CAAsBR,MAAM,CAACS,KAAP,CAAaH,EAAnC,CAAvB;AACA,+BACKP,KADL;AAEEH,QAAAA,MAAM,+BACDG,KAAK,CAACH,MADL,sBAEDG,KAAK,CAACF,eAAN,CAAsBa,MAAtB,CAA6BH,cAA7B,EAA6C,CAA7C,CAFC;AAFR,SAMGP,MAAM,CAACW,GANV,EAMgB,KANhB;;AASF,SAAKlB,MAAL;AACE,UAAMmB,QAAQ,GAAGb,KAAK,CAACH,MAAN,CAAaQ,GAAb,CAAiB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAT;AAAA,OAArB,CAAjB;AACA,UAAMO,SAAS,GAAGD,QAAQ,CAACJ,OAAT,CAAiBR,MAAM,CAACS,KAAP,CAAaH,EAA9B,CAAlB;AACA,+BACKP,KADL;AAEEF,QAAAA,eAAe,+BACVE,KAAK,CAACF,eADI,sBAEVE,KAAK,CAACH,MAAN,CAAac,MAAb,CAAoBG,SAApB,EAA+B,CAA/B,CAFU;AAFjB,SAMGb,MAAM,CAACW,GANV,EAMgB,KANhB;;AASF;AACE,aAAOZ,KAAP;AA7BJ;AA+BD,CAhCD;;AAkCA,eAAeD,WAAf","sourcesContent":["import { ADD, DELETE, GET } from \"../actions/constants\";\r\n\r\nconst defaultState = {\r\n  mylist: [],\r\n  recommendations: []\r\n};\r\n\r\nconst rootReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case GET:\r\n      return action.data;\r\n\r\n    case ADD:\r\n      const recommendItem = state.recommendations.map(item => item.id);\r\n      const recommendIndex = recommendItem.indexOf(action.movie.id);\r\n      return {\r\n        ...state,\r\n        mylist: [\r\n          ...state.mylist,\r\n          ...state.recommendations.splice(recommendIndex, 1)\r\n        ],\r\n        [action.str]: false\r\n      };\r\n\r\n    case DELETE:\r\n      const listItem = state.mylist.map(item => item.id);\r\n      const listIndex = listItem.indexOf(action.movie.id);\r\n      return {\r\n        ...state,\r\n        recommendations: [\r\n          ...state.recommendations,\r\n          ...state.mylist.splice(listIndex, 1)\r\n        ],\r\n        [action.str]: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}