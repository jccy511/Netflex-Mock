{"ast":null,"code":"import _objectSpread from \"D:\\\\Netflex Mock\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\Netflex Mock\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Netflex Mock\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Netflex Mock\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Netflex Mock\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Netflex Mock\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Netflex Mock\\\\src\\\\components\\\\MovieList.js\";\nimport React from \"react\";\nimport { addMovie as _addMovie, removeMovie as _removeMovie, fetchMovie as _fetchMovie, hideButton, showButton } from \"../Redux/actions/index\";\nimport { connect } from \"react-redux\";\nimport \"./../App.css\";\n\nvar MovieList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MovieList, _React$Component);\n\n  function MovieList() {\n    _classCallCheck(this, MovieList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MovieList).apply(this, arguments));\n  }\n\n  _createClass(MovieList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchMovie();\n    } //   handleMouseEnter(s) {\n    //     this.props.showbutton(s);\n    //   }\n    //   handleMouseLeave(s) {\n    //     this.props.hidebutton(s);\n    //   }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var list = this.props.MovieList[this.props.listType];\n      var buttonName = this.props.btnName;\n      var listName = this.props.list;\n      var clickName = buttonName === \"Remove\" ? this.props.removeMovie : this.props.addMovie;\n      console.log(\"clickName is\", clickName);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, listName), React.createElement(\"ul\", {\n        className: \"movie-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, list.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          //   onMouseOver={() => this.handleMouseEnter(item.title)}\n          //   onMouseLeave={() => this.handleMouseLeave(item.title)}\n          className: \"movieItem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: item.img,\n          alt: item.title,\n          width: \"100%\",\n          height: \"250px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"movieItem-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \" \", item.title, \" \"), React.createElement(\"div\", {\n          className: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn\",\n          onClick: function onClick() {\n            return clickName(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \" \", buttonName))));\n      })));\n    }\n  }]);\n\n  return MovieList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return _objectSpread({}, state, {\n    MovieList: state\n  });\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchMovie: function fetchMovie() {\n      dispatch(_fetchMovie());\n    },\n    addMovie: function addMovie(movie) {\n      dispatch(_addMovie(movie)); // dispatch(hideButton(movie.title));\n    },\n    removeMovie: function removeMovie(movie) {\n      dispatch(_removeMovie(movie)); // dispatch(hideButton(movie.title));\n    } //   showbutton: s => {\n    //     dispatch(showButton(s));\n    //   },\n    //   hidebutton: s => {\n    //     dispatch(hideButton(s));\n    //   }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieList);","map":{"version":3,"sources":["D:\\Netflex Mock\\src\\components\\MovieList.js"],"names":["React","addMovie","removeMovie","fetchMovie","hideButton","showButton","connect","MovieList","props","list","listType","buttonName","btnName","listName","clickName","console","log","map","item","id","img","title","Component","mapStateToProps","state","mapDispatchToProps","dispatch","movie"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  addMovie,\n  removeMovie,\n  fetchMovie,\n  hideButton,\n  showButton\n} from \"../Redux/actions/index\";\nimport { connect } from \"react-redux\";\nimport \"./../App.css\";\n\nclass MovieList extends React.Component {\n  componentDidMount() {\n    this.props.fetchMovie();\n  }\n\n//   handleMouseEnter(s) {\n//     this.props.showbutton(s);\n//   }\n\n//   handleMouseLeave(s) {\n//     this.props.hidebutton(s);\n//   }\n\n  render() {\n    const list = this.props.MovieList[this.props.listType];\n    const buttonName = this.props.btnName;\n    const listName = this.props.list;\n    const clickName =\n      buttonName === \"Remove\" ? this.props.removeMovie : this.props.addMovie;\n    console.log(\"clickName is\", clickName);\n    return (\n      <div>\n        <h2 className=\"title\">{listName}</h2>\n        <ul className=\"movie-content\">\n          {list.map(item => {\n            return (\n              <li key={item.id} >\n                <div\n                //   onMouseOver={() => this.handleMouseEnter(item.title)}\n                //   onMouseLeave={() => this.handleMouseLeave(item.title)}\n                  className=\"movieItem\"\n                >\n                  <img\n                    src={item.img}\n                    alt={item.title}\n                    width=\"100%\"\n                    height=\"250px\"\n                  />\n                  <p className=\"movieItem-title\"> {item.title} </p>\n                  <div className=\"button\">\n                    <button\n                      className=\"btn\"\n                      onClick={() => clickName(item)}\n                    >\n                      {\" \"}\n                      {buttonName}\n                    </button>\n                  </div>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    ...state,\n    MovieList: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchMovie: () => {\n    dispatch(fetchMovie());\n  },\n  addMovie: movie => {\n    dispatch(addMovie(movie));\n    // dispatch(hideButton(movie.title));\n  },\n  removeMovie: movie => {\n    dispatch(removeMovie(movie));\n    // dispatch(hideButton(movie.title));\n  },\n//   showbutton: s => {\n//     dispatch(showButton(s));\n//   },\n//   hidebutton: s => {\n//     dispatch(hideButton(s));\n//   }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MovieList);\n"]},"metadata":{},"sourceType":"module"}